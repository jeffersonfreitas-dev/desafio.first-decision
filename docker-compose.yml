version: '3.8'

services:
  postgres:
    image: postgres:13
    container_name: postgres_db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
      POSTGRES_DB: desafio
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - api_network

  api:
    build:
      context: ./register-api
      dockerfile: Dockerfile
    container_name: register_api
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres_db:5432/desafio
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres123
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    networks:
      - api_network
      
  frontend:
    image: node:16
    container_name: angular_app
    working_dir: /app
    volumes:
      - ./register-front:/app
    command: >
      sh -c "npm install && npm run build && npm start"
    ports:
      - "4200:4200"
    environment:
      API_URL: http://register_api:8080
    depends_on:
      - api
    networks:
      - api_network

networks:
  api_network:
    driver: bridge

volumes:
  postgres_data: